name: pipeline ci front

on:
  push:
    branches:
      - develop
      - staging
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Analisis SonarCloud
      uses: SonarSource/sonarcloud-github-action@v2
      env:
        SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
      with:
        args: >
          -Dsonar.organization=obligatorio-devops-corbalan-arzuaga
          -Dsonar.projectKey=Obligatorio-DevOps-Corbalan-Arzuaga_FE-react
          -Dsonar.sources=.
          -Dsonar.exclusions=**/node_modules/**
          -Dsonar.branch.name=${{ github.event_name == 'pull_request' && github.head_ref || github.ref_name }}
          -Dsonar.verbose=true
      continue-on-error: false

    - name: Verificar resultados del an√°lisis en SonarCloud
      uses: sonarsource/sonarqube-quality-gate-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
        SONAR_HOST_URL: "https://sonarcloud.io"

    - name: Mostrar el estado del Quality Gate
      run: |
       echo "El estado del Quality Gate es: ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"
   
    - name: Build project
      run: npm run build -- --project=catalog --configuration=production
    
    - name: AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: ${{ secrets.AWS_REGION }}
      
    - name: Upload to S3
      run: |
        if [ "${{ github.ref_name }}" = "develop" ]; then
          BUCKET_NAME=${{ secrets.DEV_BUCKET_NAME }}
        elif [ "${{ github.ref_name }}" = "staging" ]; then
          BUCKET_NAME=${{ secrets.STG_BUCKET_NAME }}
        elif [ "${{ github.ref_name }}" = "main" ]; then
          BUCKET_NAME=${{ secrets.PROD_BUCKET_NAME }}  
        else
          echo "Rama no soportada: ${{ github.ref_name }}"
          exit 1
        fi
        aws s3 sync ./dist/apps/catalog s3://$BUCKET_NAME/ --delete
